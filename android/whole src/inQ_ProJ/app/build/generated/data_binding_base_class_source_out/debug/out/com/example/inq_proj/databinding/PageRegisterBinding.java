// Generated by view binder compiler. Do not edit!
package com.example.inq_proj.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inq_proj.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PageRegisterBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnJoin;

  @NonNull
  public final EditText edID;

  @NonNull
  public final EditText edNAME;

  @NonNull
  public final EditText edPOSITION;

  @NonNull
  public final EditText edPW;

  @NonNull
  public final EditText edSKILL;

  private PageRegisterBinding(@NonNull RelativeLayout rootView, @NonNull Button btnJoin,
      @NonNull EditText edID, @NonNull EditText edNAME, @NonNull EditText edPOSITION,
      @NonNull EditText edPW, @NonNull EditText edSKILL) {
    this.rootView = rootView;
    this.btnJoin = btnJoin;
    this.edID = edID;
    this.edNAME = edNAME;
    this.edPOSITION = edPOSITION;
    this.edPW = edPW;
    this.edSKILL = edSKILL;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PageRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PageRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.page_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PageRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_join;
      Button btnJoin = ViewBindings.findChildViewById(rootView, id);
      if (btnJoin == null) {
        break missingId;
      }

      id = R.id.edID;
      EditText edID = ViewBindings.findChildViewById(rootView, id);
      if (edID == null) {
        break missingId;
      }

      id = R.id.edNAME;
      EditText edNAME = ViewBindings.findChildViewById(rootView, id);
      if (edNAME == null) {
        break missingId;
      }

      id = R.id.edPOSITION;
      EditText edPOSITION = ViewBindings.findChildViewById(rootView, id);
      if (edPOSITION == null) {
        break missingId;
      }

      id = R.id.edPW;
      EditText edPW = ViewBindings.findChildViewById(rootView, id);
      if (edPW == null) {
        break missingId;
      }

      id = R.id.edSKILL;
      EditText edSKILL = ViewBindings.findChildViewById(rootView, id);
      if (edSKILL == null) {
        break missingId;
      }

      return new PageRegisterBinding((RelativeLayout) rootView, btnJoin, edID, edNAME, edPOSITION,
          edPW, edSKILL);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
